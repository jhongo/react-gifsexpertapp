{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAsB7C,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACAO,KAAO,OACPC,MAAST,EACTU,SAxBkB,SAACP,GAEvBQ,QAAQC,IAAIT,EAAEU,OAAOJ,OACrBR,EAAcE,EAAEU,OAAOJ,a,+BCRlBK,EAAO,uCAAI,WAAMC,GAAN,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UAAUH,GAF5C,+DAGFI,MAAMF,GAHJ,cAGdG,EAHc,gBAICA,EAAIC,OAJL,uBAIbC,EAJa,EAIbA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAafM,GAbe,4CAAJ,sDCCPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAN,QAAQC,IAAIc,EAAIC,EAAOV,GAEnB,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAa,IAAD,EAEXhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJwB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KA8BrC,OAvBAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAGfH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAWGqB,ED1BwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAIpB,OAFAxB,QAAQC,IAAIuB,GAGR,qCACA,6BAAKpB,IAEJoB,GAAW,wCACZ,qBAAKJ,UAAU,YAAf,SAEOH,EAAOJ,KAAK,SAAAC,GAAG,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEd7BgB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAe9B,OACI,gCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BACK6C,EAAWnB,KAAK,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAA0BA,SAAYA,GAAtBA,Y,MCvBpC6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.5df88d16.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories }) => { \r\n\r\n    const [inputValue, setinputValue] = useState(''); \r\n    const handleInputChange = (e) =>{ \r\n\r\n        console.log(e.target.value); \r\n        setinputValue(e.target.value); \r\n\r\n    } \r\n\r\n    const handleSubmit = (e) => {  \r\n        e.preventDefault();\r\n        // console.log('Realizado')  \r\n        if(inputValue.trim().length > 2){\r\n\r\n            setCategories( cats => [ inputValue, ...cats]);  \r\n            setinputValue('');\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input \r\n            type = 'text' \r\n            value = {inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            \r\n        </form>\r\n    )\r\n} \r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs =  async(category) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hqM0iYdCnNnkN3IYpSLendISaaSBzWba`;\r\n    const res = await fetch(url); \r\n    const {data} = await res.json(); \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id, \r\n            title: img.title, \r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })  \r\n\r\n  return gifs; \r\n} ","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => { \r\n\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">  \r\n\r\n            <img src={url} alt={title} /> \r\n            <p>{title}</p>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => { \r\n\r\n\r\n    const {data:images, loading} = useFetchGifs(category);  \r\n\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3> \r\n\r\n        {loading && <p>Loading</p>}\r\n        <div className=\"card-grid\"> \r\n               {\r\n               images.map( img =>( \r\n                    <GifGridItem key={img.id} {...img} />\r\n                 ))\r\n                \r\n                }\r\n     \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data: [], \r\n        loading: true\r\n    }); \r\n    \r\n    useEffect( () =>{ \r\n\r\n        getGifs(category).then(imgs =>{ \r\n\r\n                \r\n                setstate({\r\n                    data: imgs, \r\n                    loading: false\r\n                });\r\n\r\n        })\r\n\r\n    }, [category])\r\n\r\n    // setTimeout(() => { \r\n\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5], \r\n    //         loading: false\r\n    //     })\r\n        \r\n    // }, 3000);\r\n\r\n    return state; \r\n}","import React, {useState} from 'react' \r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => { \r\n\r\n    const [categories, setCategories] = useState(['One Punch']); \r\n\r\n    // const handleAdd = () =>{    \r\n\r\n    //     SOLUCION 1\r\n    //     setCategories( [...categories, 'Hunter X']); \r\n\r\n    //     setCategories( cats => [...categories, 'Hunter']);  \r\n\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div> \r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr/> \r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {categories.map( category => ( \r\n                    <GifGrid key = {category} category = {category} />\r\n                ))\r\n            }\r\n            </ol>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport {GifExpertApp} from '../src/GifExpertApp'\nimport { AddCategory } from './components/AddCategory';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />, \n\n  document.getElementById('root')\n\n);\n\n\n"],"sourceRoot":""}